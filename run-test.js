const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

const tipoTest = process.argv[2];

const testsEquipamiento = [
  'tests/Equipamiento/equipamientos.spec.ts',
  'tests/Equipamiento/nuevo_equipamiento.spec.ts',
  'tests/Equipamiento/editar_equipamiento.spec.ts',
  'tests/Equipamiento/filtros_equipamiento.spec.ts',
];

const testsEspacio = [
  'tests/Espacios/espacio.spec.ts',
  'tests/Espacios/nuevo_espacio.spec.ts',
  'tests/Espacios/filtros_espacio.spec.ts',
];

const testsSectores = [
  'tests/Sectores/sector.spec.ts',
  'tests/Sectores/nuevo_sector.spec.ts',
  'tests/Sectores/filtros_sector.spec.ts',
];

const testsCronogramas = [
  'tests/Cronograma/cronograma.spec.ts',
  'tests/Cronograma/nuevo_cronograma.spec.ts',
];

// üîπ Detectar tests generados autom√°ticamente
function getAutoGeneratedTests() {
  const autoDir = path.join('tests', 'auto_generated');
  if (!fs.existsSync(autoDir)) return [];
  return fs.readdirSync(autoDir)
           .filter(file => file.endsWith('.spec.ts'))
           .map(file => path.join(autoDir, file));
}

function runTest(testPath) {
  console.log(`üîπ Ejecutando: ${testPath}`);
  execSync(`npx playwright test ${testPath}`, { stdio: 'inherit' });
}

(async () => {
  let tests;

  if (tipoTest === 'Espacios') {
    tests = testsEspacio;
  } else if (tipoTest === 'Equipamientos') {
    tests = testsEquipamiento;
  } else if (tipoTest === 'Sectores') {
    tests = testsSectores;
  } else if (tipoTest === 'Cronogramas') {
    tests = testsCronogramas;
  } else if (tipoTest === 'Todos') {
    tests = [
      ...testsEspacio,
      ...testsEquipamiento,
      ...testsSectores,
      ...testsCronogramas,
      ...getAutoGeneratedTests()
    ];
  } else {
    console.error(`‚ùå Tipo de test no v√°lido: ${tipoTest}`);
    process.exit(1);
  }

  for (const test of tests) {
    runTest(test);
  }

  console.log('‚úÖ Todas las pruebas completadas.');
})();
